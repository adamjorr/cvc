image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,3e-13),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
1 -exp(log(.95)/4e9))
1-exp(log(.95)/4e9))
1-exp(log(.95)/4e9)
1-exp(log(.95)/670e9)
1-exp(log(.95)/3.3e9)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1.5e-11,3e-13),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1.5e-11,3e-13,7e-14),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1.5e-11,3e-13,7e-14,1e-19),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1.5e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-17),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-20),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-17,1e-25),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
1-exp(log(.9)/3.3e9)
1-exp(log(.8)/3.3e9)
1-exp(log(.5)/3.3e9)
1-exp(log(.1)/3.3e9)
x <- 1:50
y <- sapply(x, FUN=p_incorrect, percent = .4, error = .01)
plot(x,y)
y
log10(1e-02)
plot(x,log10(y))
plot(x,y)
ggplot(x,y)
install.packages('ggplot2')
library('ggplot2'
)
ggplot2(x,y)
ggplot(x,y)
ggplot(aes(x,y))
geom_line(aes(x,y))
ggplot() + geom_line(aes(x,y))
ggplot() + geom_line(aes(x,y))
x <- 2:50
ggplot() + geom_line(aes(x,y))
y <- sapply(x, FUN=p_incorrect,percent=.4,error=.01)
ggplot() + geom_line(aes(x,y))
x <- 6:50
y <- sapply(x, FUN=p_incorrect,percent=.4,error=.01)
ggplot() + geom_line(aes(x,y))
ggplot() + geom_line(aes(x,y)) + scale_x_log10()
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
yscale 
yscale <- seq(0,.1,1e-2)
ggplot() + geom_line(aes(x,y)) + scale_y_continuous(breaks=yscale)
y
ggplot() + geom_line(aes(x,y)) + scale_y_continuous(breaks=seq(min(y),max(y),output.length=10))
ggplot() + geom_line(aes(x,y)) + scale_y_continuous(breaks=seq(min(y),max(y),length.out=10))
seq(min(y),max(y),length.out=10)
seq(min(y),max(y),by = 1e-5)
seq(min(y),max(y))
seq(min(y),max(y),length.out=10)
seq(min(y),max(y))
seq(min(y),max(y),by=5e5)
seq(min(y),max(y),by=1e5)
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + scale_x_log10()
x <- 1:50
y <- sapply(x, FUN=p_incorrect, percent = .4, error = .01)
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + scale_x_log10()
1 - .95^(1/150e9)
1 - .1^(1/150e9)
x <- 1:50
y<-seq(.01,1,by=.01)
z<- outer(x,y,Vectorize(p_incorrect), error=.01)
p <- list(x=x,y=y,z=z)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,3e-13),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
p_incorrect = function(cov, percent, error){ sum(dbinom( floor(percent * cov ):cov, cov, error  )) }
x <- 1:50
y<-seq(.01,1,by=.01)
z<- outer(x,y,Vectorize(p_incorrect), error=.01)
p <- list(x=x,y=y,z=z)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-16),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-16,1e-20,1e-24),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-24,1e-40),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11,1e-24,1e-40,1e-60),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
x <- 1:10
p_incorrect_cutoff = function(cov, cutoff, error){sum(dbinom(cutoff:cov,cov,error))}
y <- sapply(x, FUN=p_incorrect_cutoff, cov = 10, error = .01)
plot(x,y)
x <- 1:50
y <- sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01)
plot(x,y)
ylim(seq(0,.1,by=.01))
ylim(c(0,.1))
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
x <- 1:30
y <- sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01)
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
abline(1e-11,0)
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + geom_hline(yintercept=1e-11)
x <- 1:50
y <- sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01)
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + geom_hline(yintercept=1e-11)
x <- 1:30
y <- sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01)
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + geom_hline(yintercept=1e-11)
y
p_incorrect_cutoff(30,0,.01)
p_incorrect_cutoff(30,1,.01)
y[y<1e-11]
min(which(y < 1e-11))
x <- 1:50
y <- min(which(sapply(coverages, FUN=p_incorrect_cutoff, cov = max(x), error = .01) < 1e-11))
y <- min(which(sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01) < 1e-11))
ggplot() + geom_line(aes(x,y))
y
x
x[y]
y <- sapply(x, FUN=p_incorrect_cutoff, cov = max(x), error = .01)
y
y[11]
y[10]
minimum_cutoff = function(coverage, p){min(which(sapply(coverage, FUN=p_incorrect_cutoff, cov = max(coverage), error = .01) < p))} #gives first cutoff where p_incorrect < p
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
cutoffs
minimum_cutoff(50,1e-11)
minimum_cutoff(coverage,1e-11)
seq(1,1)
minimum_cutoff = function(coverages, p){
coverage = 1:coverages
min(which(sapply(coverage, FUN=p_incorrect_cutoff, cov = max(coverage), error = .01) < p))
}
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
cutoffs
plot(coverage,cutoffs)
plot(coverage,log(coverage)
)
plot(coverage,cutoffs)
coverage <- 1:100
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
plot(coverage,cutoffs)
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
ggplot() + geom_line(aes(coverage,cutoffs)) + scale_y_log10()
ggplot() + geom_line(aes(coverage,cutoffs))
ggplot() + geom_line(aes(coverage,cutoffs)) + scale_y_log10()
ggplot() + geom_line(aes(coverage,cutoffs))
ggplot() + geom_line(aes(coverage,cutoffs)) + geom_line(aes(coverage,.7 * coverage))
ggplot() + geom_line(aes(coverage,cutoffs))
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-10)
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
ggplot() + geom_line(aes(coverage,cutoffs))
cutoffs
.01^10 / .99^10
.01^9 / .99 ^ 9
.01/.99+.01^2/.99^2
.01/.99+.01^2/.99^2+.01^3/.99^3+.01^4/.99^4
.01/.99+.01^2/.99^2+.01^3/.99^3+.01^4/.99^4+.01^5/.99^5
.01020408 * .99^10
.01020408 * .99^10 * 2^10
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=.1)
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=.01)
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=.001)
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=.0001)
cutoffs
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11)
cutoffs
minimum_cutoff = function(coverages, p){
coverage = 1:coverages
min(which(sapply(coverage, FUN=p_incorrect_cutoff, cov = max(coverage), error = .01) < p))
} #gives first cutoff where p_incorrect < p
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11) #seems some kind of binomial number pattern here.
#For p=1e-11, the number of times the next cutoff appears equals the number of times the current cutoff appears + 3 if the current number is even, +2 if the current number is odd
ggplot() + geom_line(aes(coverage,cutoffs))
cutoffs
minimum_cutoff = function(coverages, p){
coverage = 1:coverages
min(which(sapply(coverage, FUN=p_incorrect_cutoff, cov = max(coverage), error = .01) < p))
} #gives first cutoff where p_incorrect < p
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11) #seems some kind of number pattern here, possibly associated with the binomial
#For p=1e-11, the number of times the next cutoff appears equals the number of times the current cutoff appears + 3 if the current number is even, +2 if the current number is odd
ggplot() + geom_line(aes(coverage,cutoffs))
ls
ls
p_incorrect_cutoff = function(cov, cutoff, error){sum(dbinom(cutoff:cov,cov,error))}
minimum_cutoff = function(coverages, p){
coverage = 1:coverages
min(which(sapply(coverage, FUN=p_incorrect_cutoff, cov = max(coverage), error = .01) < p))
} #gives first cutoff where p_incorrect < p
coverage <- 1:50
cutoffs <- sapply(coverage, FUN=minimum_cutoff, p=1e-11) #seems some kind of number pattern here, possibly associated with the binomial
#For p=1e-11, the number of times the next cutoff appears equals the number of times the current cutoff appears + 3 if the current number is even, +2 if the current number is odd
ggplot() + geom_line(aes(coverage,cutoffs))
ggplot() + geom_line(aes(coverage,cutoffs)) + main("P(incorrect call) = 1e-11, P(error) = .01")
ggplot() + geom_line(aes(coverage,cutoffs)) + ggtitle("P(incorrect call) = 1e-11, P(error) = .01")
ggplot() + geom_line(aes(coverage,cutoffs)) + ggtitle("Cutoff if P(incorrect call) = 1e-11, P(error) = .01")
pwd()
pwd
ls()
wd()
dir()
dir('code')
chdir('code/cvc'
)
dir()
cd('code/cvc')
setwd('code/cvc')
pdf('cutoffs.pdf')
ggplot() + geom_line(aes(coverage,cutoffs)) + ggtitle("Cutoff if P(incorrect call) = 1e-11, P(error) = .01")
dev.off()
pdf('3d.pdf')
p_incorrect = function(cov, percent, error){ sum(dbinom( floor(percent * cov ):cov, cov, error  )) }
#full plot
x <- 1:50
y<-seq(.01,1,by=.01)
z<- outer(x,y,Vectorize(p_incorrect), error=.01)
p <- list(x=x,y=y,z=z)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
dev.off()
x <- 2:50
y <- sapply(x, FUN=p_incorrect, percent = .4, error = .01)
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial') + xlab('Coverage')
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial') + xlab('Coverage') + ggtitle("Probability a > 40% consensus is wrong under binomial with 1% error")
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial') + xlab('Coverage') + ggtitle("Probability a > 40% consensus incorrect under binomial with 1% error")
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial') + xlab('Coverage') + ggtitle("Probability incorrect call with >40% consensus, 1% error")
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial, log10 scale') + xlab('Coverage') + ggtitle("Probability incorrect call with >40% consensus, 1% error")
pdf('p_incorrect.pdf')
ggplot() + geom_line(aes(x,y)) + scale_y_log10() + ylab('P(incorrect) under binomial, log10 scale') + xlab('Coverage') + ggtitle("Probability incorrect call with >40% consensus, 1% error")
dev.off()
x <- seq(from = -14, to = -10, length.out = 100)
p_0_incorrect = function(x){ dbinom(0,150e9,x) }
plot(x, sapply(10^x, FUN = p_0_incorrect))
abline(a = .95, b = 0)
y<-sapply(10^x, FUN=p_0_incorrect))
y<-sapply(10^x, FUN=p_0_incorrect)
ggplot() + geom_line(aes(x,y))
ggplot() + geom_line(aes(x,y)) + scale_y_log10()
ggplot() + geom_line(aes(x,y)) + scale_y_log()
ggplot() + geom_line(aes(x,y))
ggplot() + geom_line(aes(x,y)) + ylab(P(0 incorrect calls))
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)')
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + scale_x_log10()
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)')
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('10^-x')
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('Probability of an incorrect call, exponent')
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('Probability of an incorrect call, exponent') + ggtitle("Probability of 0 incorrect calls in a genome of length 150GB")
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('Probability of an incorrect call, exponent') + ggtitle("Probability of 0 incorrect calls in a genome of length 150GB under binomial")
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('Probability of an incorrect call, exponent') + ggtitle("Probability of 0 incorrect calls in a genome of length 150GB")
pdf('p_0_incorrect.pdf')
ggplot() + geom_line(aes(x,y)) + ylab('P(0 incorrect calls)') + xlab('Probability of an incorrect call, exponent') + ggtitle("Probability of 0 incorrect calls in a genome of length 150GB")
dev.off()
p_incorrect = function(cov, percent, error){ sum(dbinom( floor(percent * cov ):cov, cov, error  )) }
#full plot
x <- 1:50
y<-seq(.01,1,by=.01)
z<- outer(x,y,Vectorize(p_incorrect), error=.01)
p <- list(x=x,y=y,z=z)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
z<- log10(outer(x,y,Vectorize(p_incorrect), error=.01))
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
z
p <- list(x=x,y=y,z=z)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call",contour=list(levels=c(.05,.001,1e-7,1e-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call (log scale)",contour=list(levels=c(-2,-3,-7,-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call (log scale)",contour=list(levels=c(-2,-3,-7,-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call (log scale)",contour=list(levels=c(-3,-7,-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call (log10 scale)",contour=list(levels=c(-3,-7,-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
pdf('3d_log10.pdf')
image2D(p,xlab="Coverage",ylab="Consensus Level",main="Probability of an Incorrect Call (log10 scale)",contour=list(levels=c(-3,-7,-11),col="white",labcex=.8,lwd=4),lighting=TRUE,rasterImage=TRUE)
dev.off()
xn <- [4,3]
xn <- (4,4)
xn <- c(4,2,2,1,3,3)
zn <- c(2,1,0,2,1,0)
z <- c(2,2,2,2,2,2)
zz <- c(0,1,2,0,1,2)
x <- c(5,5,5,5,5,5)
(xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
zn <- c(2,1,0,0,1,2)
zz <- c(0,1,2,2,1,0)
(xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
mu <- (xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
plot(mu)
mean(mu)
xn <- c(4,1,0,0)
x <- c(5,5,5,5)
zz <- c(0,2,2,2)
zn <- c(2,0,0,0)
z <- c(2,2,2,2)
mu <- (xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
mu
mu<-(0,1,100)
mu<-seq(0,1,100)
mu
mu<-seq(0,1,out.length=100)
?seq
mu<-seq(0,1,by=.01)
pn <- function(zn,z,mu){zn * (1 - mu) / z + mu * (z - zn) / (3 * z)}
?pn
pn(zn,z,mu)
pn(zn,z,.33)
pn(zn,z,.5)
like
like <- function(xn,x,pn){sum(log(binom(xn,x,pn)))}
xn
x
apply(mu,pn,zn,z)
lapply(mu,pn,zn,z)
lapply(mu,pn,zn,z)[0]
lapply(mu,pn,zn,z)[[0]]
lapply(mu,pn,zn,z)[[1]]
lapply(mu,pn,zn,z)[[2]]
lapply(mu,pn,zn,z)[[3]]
lapply(mu,pn,zn,z)[[4]]
lapply(mu,pn,zn,z)[[5]]
plot(lapply(mu,pn,zn,z))
sapply(mu,pn,zn,z)
res <- sapply(mu,pn,zn,z)
plot(res)
history
history()
history()
history(max.show=200)
df
?df
?data.frame
data.frame(xn, x, zn, z, zz)
history(max.show=200)
?lapply
?apply
test <- data.frame(xn, x, zn, z, zz)
apply(test,1,likemu)
likemu <- function(xn,x,zn,z,mu){sum(log(binom(xn,x,pn(zn,z,mu))))}
apply(test,1,likemu)
binom
binomial
binomial(1,1)
binomial(1,1,.5)
binom(1,1,.5)
dbinom
like <- function(xn,x,pn){sum(log(dbinom(xn,x,pn)))}
likemu <- function(xn,x,zn,z,mu){sum(log(dbinom(xn,x,pn(zn,z,mu))))}
apply(test,1,likemu)
apply(X = test,margin = 1,FUN = likemu, )
apply(X = test,MARGIN = 1,FUN = likemu, )
apply(X = test,MARGIN = 1,FUN = likemu, xn = test$xn, x = test$x)
apply(X = test,MARGIN = 1,FUN = likemu, xn = test$xn, x = test$x, zn = test$xn, z = test$z)
test
apply(X = test,MARGIN = 1,FUN = likemu, xn = test$xn, x = test$x, zn = test$xn, z = test$z, mu = .5)
likemu
pn
apply(X = test,MARGIN = 1,FUN = function(x) likemu(x['xn'],x['x'],x['zn]))
apply(X = test,MARGIN = 1,FUN = function(x) likemu(x['xn'],x['x'],x['zn'],x['z']))
pn
apply(X = test,MARGIN = 1,FUN = function(x) likemu(x['xn'],x['x'],x['zn'],x['z'],.5))
apply(X = test,MARGIN = 1,FUN = function(x) likemu(x['xn'],x['x'],x['zn'],x['z'],.333))
test
mu
plot(mu, likemu(xn[1],x[1],zn[1],z[1],mu))
likemu(xn[1],x[1],zn[1],z[1],mu)
xn[1]
x[1]
likemu(xn[1],x[1],zn[1],z[1],mu[1])
pn(z[1],z[1],mu[1])
pn(zn[1],z[1],mu[1])
pn
mu[1]
likemu(xn[1],x[1],zn[1],z[1],mu[2])
mu[2]
likemu(xn[1],x[1],zn[1],z[1],mu)
sapply(mu,FUN = likemu(xn[1],x[1],zn[1],z[1]))
sapply(mu,FUN = likemu(xn[1],x[1],zn[1],z[1],x))
sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y))
plot(mu,sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))) + geom_vline(.333)
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))) + geom_vline(.333)
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y))))
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))) + geom_vline(x=.333)
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))) + geom_vline(xintercept=.333)
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn[1],x[1],zn[1],z[1],y)))) + geom_vline(xintercept=c(.333,.5))
mean(1/3,1/2)
.333 + .5 
.833/2
?mean
mean(c(1/3,1/2))
log(.333)
xn
xn[1]
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.333,.5))
pn(zn,z,mu[2])
dbinom(xn,x,pn(zn,z,mu[2]))
sum(log(dbinom(xn,x,pn(zn,z,mu[2]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[1]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[3]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[4]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[5]))))
mu[3]
mu[4]
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.025,.333,.5))
sum(log(dbinom(xn,x,pn(zn,z,mu[6]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[7]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[9]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[10]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[12]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[15]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[18]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[20]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[30]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[25]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[24]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[23]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[22]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[20]))))
sum(log(dbinom(xn,x,pn(zn,z,mu[21]))))
mu[20]
mu[21]
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
5/6
1 - 5/6
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.16,.2,.333,.5))
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
1/3 * 1/2
sqrt(1/3 * 1/2)
(1/3 * 1/2)**(1/4)
(1/3 * 1/2)**(1/2)
(1/2 - 1/3) / (log(1/2) - log(1/3))
sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
max(vals)
vals[20]
vals[21]
mu[21]
xn <- c(3,2,0,0)
x <- c(5,5,5,5)
zn <- c(2,0,0,0)
z <- c(2,2,2,2)
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
max(vals)
vals[vals=-4.640005]
which(vals[vals==-4.640005])
vals[vals==-4.640005]
vals[vals==-4.650005]
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
max(vals)
mu
vals
vals[41]
mu[41]
(xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
mu[38
]
xn <- c(3,0,1,1)
x <- c(5,5,5,5)
zn <- c(2,0,0,0)
z <- c(2,2,2,2)
zz <- z - zn
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
vals <- \sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
vals
max(vals)
?which
which(vals==-3.733714)
vals==-3.733714
vals==max(vals)
which(vals==max(vals))
vals[41]
mu[41]
xn <- c(3,0,2,0)
x <- c(5,5,5,5)
zn <- c(1,0,1,0)
z<-c(2,2,2,2)
zz <- z-zn
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
which(vals==max(vals))
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
xn <- c(2,0,2,1)
zz <- z-zn
ggplot() + geom_line(aes(mu, sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y)))) + geom_vline(xintercept=c(.2,.333,.5))
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
which(vals==max(vals))
mu[31]
mu[32]
m <- (xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn)
m
1/6
9/4
9/22
3/11
mean(c(9/22,3/11))
4 * 9 / 66
4 / (22/9 + 11/3)
history
history()
?history
history(max.show = 200)
xn <- c(3,0,1,1)
x <- c(5,5,5,5)
zn <- c(2,0,1,0)
z <- c(3,3,3,3)
zz <- z - zn
mu <- (xn / (x + 1) - zn / z) * (3*z)/(zz - 3*zn) #mu to maximize probability given N
vals <- sapply(mu,FUN = function(y) likemu(xn,x,zn,z,y))
vals
history(max.show = 200)
savehistory()
